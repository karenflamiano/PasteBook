//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PasteBookEntityFramework
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class USER
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public USER()
        {
            this.COMMENTs = new HashSet<COMMENT>();
            this.FRIENDs = new HashSet<FRIEND>();
            this.FRIENDs1 = new HashSet<FRIEND>();
            this.LIKEs = new HashSet<LIKE>();
            this.NOTIFICATIONs = new HashSet<NOTIFICATION>();
            this.NOTIFICATIONs1 = new HashSet<NOTIFICATION>();
            this.POSTs = new HashSet<POST>();
            this.POSTs1 = new HashSet<POST>();
        }
    
        
        public int ID { get; set; }

        [Required]
        [RegularExpression(@"^((\s*([_.]?)\s*[a-zA-Z0-9]+)+([_.]?)\s*)$", ErrorMessage = "{0} should only contain letters, numbers and characters: -,'")]
        [StringLength(50, ErrorMessage = "{0} must not exceed 50 characters.")]
        public string USER_NAME { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "{0} must not exceed 50 characters.")]
        [DataType(DataType.Password)]
        public string PASSWORD { get; set; }


        public string SALT { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "{0} must not exceed 50 characters.")]
        [RegularExpression("[a-zA-Z -']*", ErrorMessage = "{0} should only contain letters and characters: -,'")]
        public string FIRST_NAME { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "{0} must not exceed 50 characters.")]
        [RegularExpression("[a-zA-Z -']*", ErrorMessage = "{0} should only contain letters and characters: -,'")]
        public string LAST_NAME { get; set; }

        [Required]
        [DisplayFormat(DataFormatString = "{0: dd-MMM-yyyy}", ApplyFormatInEditMode = true)]
        [DataType(DataType.DateTime)]
        public System.DateTime BIRTHDAY { get; set; }

        
        public Nullable<int> COUNTRY_ID { get; set; }

        [StringLength(16, MinimumLength = 9, ErrorMessage = "{0} must be between 8 and 15 characters long.")]
        public string MOBILE_NO { get; set; }

        [Required]
        public string GENDER { get; set; }

        public byte[] PROFILE_PIC { get; set; }

        public System.DateTime DATE_CREATED { get; set; }


        public string ABOUT_ME { get; set; }

        [Required]
        //stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address
        [StringLength(254, ErrorMessage = "{0} must not exceed {1} characters.")]
        [DataType(DataType.EmailAddress)]
        public string EMAIL_ADDRESS { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<COMMENT> COMMENTs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FRIEND> FRIENDs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FRIEND> FRIENDs1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LIKE> LIKEs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NOTIFICATION> NOTIFICATIONs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NOTIFICATION> NOTIFICATIONs1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<POST> POSTs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<POST> POSTs1 { get; set; }
        public virtual REF_COUNTRY REF_COUNTRY { get; set; }
    }
}
