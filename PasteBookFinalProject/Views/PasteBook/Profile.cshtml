@model PasteBookEntityFramework.USER

@{ 
    var ID = Session["ID"];
    var friendshipStatus = ViewData["FriendshipStatus"].ToString();
}


@Html.Hidden("RedirectToIndex", Url.Action("Logout", "PasteBook"))
<div class="modal fade" id="logout">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p>Are you sure you want to logout?</p>
            </div>
            <div class="modal-footer">
                <button id="sureLogOut" type="button" class="btn btn-secondary" data-dismiss="modal">ok</button>
                <button type="button" class="btn btn-warning" data-dismiss="modal">cancel</button>

            </div>
        </div>
    </div>
</div>

<div class="container" id="accountProfile">

    <div class="modal fade" id="warning">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p>You are about to post nothing.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="commentWarning">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p>You are about to comment nothing.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="editAboutMe">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    EDIT ABOUT
                </div>

                @using (Html.BeginForm("EditAboutMe", "PasteBook", FormMethod.Post, new { id = "aboutMe" }))
                {
                    <div class="modal-body">
                        @Html.TextArea("aboutMe", new { @cols = "80", @rows = "4", placeholder = "About me", @id = "aboutMe", maxlength = "2000" })
                        <div class="form-group">
                            <span id="aboutMeValidation" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" id="saveAboutMe">Save</button>
                        <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-4 col-md-offset-1">
        <div class="well well-lg">

            @{
                if (Model.PROFILE_PIC != null)
                {

                    var base64 = Convert.ToBase64String(Model.PROFILE_PIC);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@imgSrc" class="profilePicture" />
                }
                else
                {
                    <img src="~/Content/images/user.png" class="profilePicture" />
                }
            }
        </div>

        @{
            if (Model.ID == (Int32)Session["ID"])
            {
                using (Html.BeginForm("UploadImage", "PasteBook", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="well well-lg">
                        <h4>Change Profile Picture</h4>
                            <div class="wrapper">
                                <div class="col-md-12">
                                    <div id="imageHolder" alt="Profile Picture"> </div>
                                    <input id="uploadImage" title="Upload an Image" type="file" name="file" accept="image/jpeg, image/png, image/jpg" />
                                </div>
                            </div>
                        <div>
                            @Html.ValidationMessageFor(model => model.PROFILE_PIC, "", new { @class = "text-danger", id = "errorValidation" })
                        </div>
                        <button type="submit" class="btn btn-primary" id="editProfilePicture">Save Picture</button>
                    </div>
                }
            }
        }

        @{
            switch (friendshipStatus)
            {

                case "SENT REQUEST":
                    <h3>Pending friend request. Cannot add friend anymore</h3>
                    break;
                case "CONFIRM REQUEST":
                    <h1 id="confirmRequest">Confirm friend Request</h1>
                    <button type="submit" class="btn_confirmFriend btn-primary" onclick="confirmRequest(@Model.ID)" value="@Model.ID">Confirm Request</button>
                    break;
                case "NOT FRIENDS":
                        <h1 id="addFriend">Not friends</h1>
                        <button type="submit" class="btn_addFriend btn-primary" onclick="addFriend(@Model.ID)" value="@Model.ID">Add Friend</button>
                    break;
                case "FRIENDS":
                    <h1>Friends</h1>
                    break;
                case "NO REQUEST":
                    <h1>No request</h1>
                    break;
                default:
                    break;
            }
            }
      
        <div class="well well-lg">
            <div class="form-group">
                <h4>DETAILS</h4>
                <div>
                    <span class="glyphicon glyphicon-user">
                        FULL NAME:
                    </span>
                    @Model.FIRST_NAME @Model.LAST_NAME
                    <span class="glyphicon glyphicon-gift">
                        BIRTHDAY:
                    </span>
                    @Model.BIRTHDAY.ToShortDateString()

                    <span class="glyphicon glyphicon-calendar">
                        STARTED SINCE:
                    </span>
                    @Model.BIRTHDAY.ToShortDateString()

                    <span class="glyphicon glyphicon-envelope">
                        EMAIL:
                    </span>
                    @Model.EMAIL_ADDRESS
                </div>
            </div>

            <div class="well well-lg" id="aboutMe">
                <h4>ABOUT ME</h4>
                @Model.ABOUT_ME
            </div>
            @{
                if (Model.ID == (Int32)Session["ID"])
                {
                    <button type="button" class="btn btn-primary" id="editAboutME">Edit About Me</button>
                }
            }

        </div>
    </div>

    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading text-left">
                @{
                    if (Model.PROFILE_PIC == null)
                    {
                        <img src="~/Content/images/user.png" class="postPicture" />
                    }
                    else
                    {
                        var base64 = Convert.ToBase64String(Model.PROFILE_PIC);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <img src="@imgSrc" class="postPicture" />
                    }
                }
                <span class="glyphicon glyphicon-pencil"></span>
                @Model.FIRST_NAME @Model.LAST_NAME
            </div>
                <div class="panel-body">
                    @Html.TextArea("postContent", null, new { @cols = "80", @rows = "4", placeholder = "What's on your mind?", id = "postContent" })
                </div>
                <div class="panel-footer text-left">
                    <button type="submit" class="btn btn-primary" id="addPost">POST</button>
                </div>
            </div>
        </div>
        <div class="col-md-6" id="postRefresh">
            @{
                Html.RenderAction("PostList", "PasteBook");
            }
        </div>
    </div>


@section scripts {
   @Scripts.Render("~/bundles/jqueryval")
        <script>
            var addPost = '@Url.Action("AddPost", "PasteBook")'
            var reloadPostList = '@Url.Action("PostList", "PasteBook")'
            var addComment = '@Url.Action("AddComment", "PasteBook")'
            var addLike = '@Url.Action("AddLike", "PasteBook")'
            var editAboutMe = '@Url.Action("EditAboutMe","PasteBook")'
            var addFriend = '@Url.Action("AddFriend", "PasteBook")'
            var acceptFriendRequest = '@Url.Action("ConfirmRequest", "PasteBook")'

            $(document).ready(function () {
                //change profile picture
                $('#editProfilePicture').attr("disabled", true);

                //addPost
                $("#addPost").click(function () {
                    var content = $('#postContent').val();
                    if (content.length > 0) {
                        var data = {
                            postContent: $('#postContent').val()
                        }
                        $.ajax({
                            url: addPost,
                            data: data,
                            type: 'POST',
                            success: function (data) {
                                reload();
                            },
                            error: function () {
                                alert('Something went wrong.')
                            }
                        });
                    }
                    else {
                        $('#warning').modal('show');;
                    }

                });

                //refresh contents of the postList partialView
                function reload() {
                    $("#postRefresh").load(reloadPostList);
                    $("#postContent").val("");
                };


                //addComment
                $(document).on("click", ".btn_comment", function () {
                    var Content = $('#commentContent' + $(this).val()).val();
                    if (Content.length > 0) {
                        var data = {
                            commentContent: $('#commentContent' + $(this).val()).val(),
                            postID: $(this).val(),
                        }

                        $.ajax({
                            url: addComment,
                            data: data,
                            type: 'POST',
                            success: function (data) {
                                reload();
                            },
                            error: function () {
                                alert('Something went wrong')
                            }
                        });
                    }
                    else {
                        $('#commentWarning').modal('show');
                    }
                });

                //Edit profile picture
                //stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded
                $("#uploadImage").on('change', function () {
                    if (typeof (FileReader) != "undefined") 
                    {
                        var size = parseFloat($("#uploadImage")[0].files[0].size / (1024)).toFixed(2);
                        var ext = $('#uploadImage').val().split('.').pop().toLowerCase();

                        if ($.inArray(ext, ['png', 'jpg', 'jpeg']) != -1)
                        {
                            if(size < 30)
                            {
                                $('#errorValidation').text("");
                                var image_holder = $("#imageHolder");
                                image_holder.empty();

                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    $('#imageHolder').attr('src', e.target.result);
                                }
                                reader.readAsDataURL($(this)[0].files[0]);

                                $('#editProfilePicture').attr("disabled", false);
                            }
                            else
                            {
                                $('#errorValidation').text("Image is larger than 30KB. Please select another image.");
                                $('#editProfilePicture').attr("disabled", true);
                            }
                        }
                        else
                        {
                            $('#errorValidation').text("Invalid Image Format. Please select another image.");
                            $('#editProfilePicture').attr("disabled", true);
                        }
                    }
                    else
                    {
                        $('#editProfilePicture').attr("disabled", true);
                    }
                });

                //addLikeToPost
                $(document).on("click", ".btn_like", function () {
                    var data = {
                        postID: $(this).val()
                    }

                    $.ajax({
                        url: addLike,
                        data: data,
                        type: 'POST',
                        success: function (data) {
                            reload();

                        },
                        error: function () {
                            alert('something went wrong')
                        }
                    });
                });


                //logout
                //stackoverflow.com/questions/12167102/ajax-logout-redirect
                $("#logoutButton").click(function () {
                    $('#logout').modal('show');
                    $("#sureLogOut").click(function () {
                        var url = $("#RedirectToIndex").val();
                        location.href = url;
                    })
                })



                //edit about me
                $('#editAboutME').click(function () {
                    $('#editAboutMe').modal('show');
                });

                //addFriend
                $(".btn_addFriend").on("click", function () {
                    $(".btn_addFriend").prop("disabled", false);
                    var data = {
                        visitedProfileID: $(this).val()
                    }

                    $.ajax({
                        url: addFriend,
                        data: data,
                        type: 'POST',
                        success: function (data) {
                            alert("Add Friend");
                            $(".btn_addFriend").prop("disabled", true);
                            $('#addFriend').text("Friend Request Sent");

                        },
                        error: function () {
                            alert('something went wrong')
                        }
                    });
                });

                //confirm friend request
                $(".btn_confirmFriend").on("click", function () {
                    $(".btn_confirmFriend").prop("disabled", false);
                    var data = {
                        visitedProfileID: $(this).val()
                    }

                    $.ajax({
                        url: acceptFriendRequest,
                        data: data,
                        type: 'POST',
                        success: function (data) {
                            alert("You are now friends because you accepted the request.");
                            $(".btn_confirmFriend").prop("disabled", true);
                            $('#confirmRequest').text("Friend Confirmed");

                        },
                        error: function () {
                            alert('something went wrong')
                        }
                    });
                });

            });
        </script>

    }