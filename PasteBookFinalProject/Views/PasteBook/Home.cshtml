@model PasteBookFinalProject.Models.LoginViewModel

@section Login{
    @using (Html.BeginForm("Login", "Pastebook", FormMethod.Post))
    {
        <ul class="nav navbar-nav">
            <li class="login">
               @Html.EditorFor(model => model.loginModel.LoginUsername, new { htmlAttributes = new { @class = "form-control", id = "txtLoginUsername", placeholder = "Email Address"} })
            </li>
            <li class="login">
                @Html.EditorFor(model => model.loginModel.LoginPassword, new { htmlAttributes = new { @class = "form-control", id = "txtLoginPasssword", placeholder = "Password" } })
            </li>
            <li class="login">
                <button type="submit" class="btn btn-primary">Login</button>
            </li>
        </ul>

    }
    }



@using (Html.BeginForm("Index", "PasteBook", FormMethod.Post))
{
    <!-- Top content -->
    <div class="top-content">
        <div class="container">

            <div class="row">
                <div class="col-md-8 col-sm-offset-2 text">
                    <h1><img src="~/Content/images/finallogo.png"></h1>
                    <div class="description">
                        <p>
                            Welcome to pastebook! You can now log in using your account.
                        </p>
                        <p>
                            Don't have an account? Feel free to create one.
                        </p>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="form-horizontal">
        <div class="col-md-6">
            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.FirstName, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.FirstName, new { htmlAttributes = new { @class = "form-control ", id = "txtEmail" } })
                    @Html.ValidationMessageFor(model => model.userModel.FirstName, "", new { @class = "text-danger" })
                    <span id="msgForEmail" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.LastName, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.LastName, new { htmlAttributes = new { @class = "form-control", id = "txtUsername" } })
                    @Html.ValidationMessageFor(model => model.userModel.LastName, "", new { @class = "text-danger" })
                    <span id="msgForUsername" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.EmailAddress, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.Birthday, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.Birthday, new { htmlAttributes = new { @class = "form-control", @type = "date", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.userModel.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.CountryID, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.userModel.CountryID, Session["CountryList"] as SelectList, "--Select Country", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.MobileNumber, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.MobileNumber, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.userModel.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.Gender, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.userModel.Gender, new List<SelectListItem>{
                   new SelectListItem{ Text="Male", Value="M"},
                   new SelectListItem{ Text="Female", Value="F"},
                   new SelectListItem{ Text="Unspecified", Value="U"}
                   }, "Select Gender"
               )
                </div>
                <div class="col-md-6">
                    @Html.ValidationMessageFor(model => model.userModel.Gender, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group required">
                <div class="col-md-3 col-md-offset-3">
                    @Html.LabelFor(model => model.userModel.AboutMe, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.userModel.AboutMe, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.AboutMe, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group required">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.userModel.Username, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.userModel.Password, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.userModel.ConfirmPassword, new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.userModel.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userModel.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var data = {
                email: $(this).val()
            }

            $.ajax({
                url: checkEmailUrl,
                data: data,
                type: 'GET',
                success: function (data) {
                    CheckEmail(data);
                },
                error: function () {
                    alert('Something went wrong')
                }

            })

            function CheckEmail(data) {
                if (data.Status == true) {
                    $('#msgForEmail').html('Email already exists.');
                    $('#msgForEmail').css('display', 'block');
                } else {
                    $('#msgForEmail').css('display', 'none');
                }
            }


        });

    </script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/scripts.js"></script>
}
