@model PasteBookFinalProject.Models.LoginViewModel

@section login{
@using (Html.BeginForm("Home", "PasteBook", FormMethod.Post))
 {
        <ul class="nav navbar-nav">
            <li class="login">
                <div>@ViewBag.Login</div> 
               @Html.ValidationMessageFor(model => model.LoginModel.LoginEmail, "", new { @class = "text-danger" })
            </li>
            <li class="login">
                @Html.EditorFor(model => model.LoginModel.LoginEmail, new { htmlAttributes = new { @class = "form-control", id = "txtEmailAddress", placeholder = "email@yahoo.com" } })
            </li>
            <li class="login">
                @Html.EditorFor(model => model.LoginModel.LoginPassword, new { htmlAttributes = new { @class = "form-control", id = "txtLoginPasssword", placeholder = "Password" , type="password"} })
            </li>
            <li class="login">
                <button type="submit" class="btn btn-primary">Login</button>
            </li>
        </ul>
    }
}
    <div class="top-content">
        <div class="container">

            <div class="row">
                <div class="col-md-8 col-sm-offset-2 text">
                    <h1><img src="~/Content/images/finallogo.png"></h1>
                    <div class="description">
                        <p>
                            Welcome to pastebook! You can now log in using your account.
                        </p>
                        <p>
                            Don't have an account? Feel free to create one.
                        </p>
                        <p>
                            Fields with * are required.
                        </p>
                    </div>
                </div>
            </div>

        </div>
    </div>

    @using (Html.BeginForm("Index", "PasteBook", FormMethod.Post))
    {
        <div class="form-horizontal registerClass">
            <div class="col-md-6">
                <div class="form-group required">
                    <div class="col-md-3">
                        <label class="firstAsterisk">*</label>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.FIRST_NAME, new { @class = "control-label"})
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.FIRST_NAME, new { htmlAttributes = new { @class = "form-control ", id = "txtEmail", required = "required" } })
                        @Html.ValidationMessageFor(model => model.user.FIRST_NAME, "", new { @class = "text-danger" })
                        <span id="msgForEmail" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                        <label class="firstAsterisk">*</label>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.LAST_NAME, new { @class = "control-label"})
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.LAST_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUsername", required = "required" } })
                        @Html.ValidationMessageFor(model => model.user.LAST_NAME, "", new { @class = "text-danger" })
                        <span id="msgForUsername" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                        <label class="secondAsterisk">*</label>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.EMAIL_ADDRESS, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.user.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                        <label class="fourthAsterisk">*</label>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.BIRTHDAY, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", @type = "date", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.user.BIRTHDAY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.COUNTRY_ID, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.user.COUNTRY_ID, new SelectList(Model.CountryList, "ID", "COUNTRY"),  new { @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.user.COUNTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.MOBILE_NO, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.MOBILE_NO, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.user.MOBILE_NO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.user.GENDER, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.user.GENDER, new List<SelectListItem>{
                   new SelectListItem{ Text="Male", Value="M"},
                   new SelectListItem{ Text="Female", Value="F"},
                   new SelectListItem{ Text="Unspecified", Value="U"}
                   }, "Select Gender", new { @class = "form-control" })
                    </div>
                    <div class="col-md-6">
                        @Html.ValidationMessageFor(model => model.user.GENDER, "", new { @class = "text-danger" })
                    </div>

                </div>

            </div>

            <div class="col-md-6">
                <div class="form-group required">
                    <div class="col-md-2">
                        <label class="asterisk">*</label>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.user.USER_NAME, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.USER_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.user.USER_NAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-2">
                        <label class="asterisk">*</label>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.user.PASSWORD, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.user.PASSWORD, new { htmlAttributes = new { @class = "form-control", type = "password" , id = "txtNewPassword", required = "required" } })
                        @Html.ValidationMessageFor(model => model.user.PASSWORD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group required">
                    <div class="col-md-2">
                        <label class="fifthAsterisk">*</label>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CONFIRM_PASSWORD, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.CONFIRM_PASSWORD, new { htmlAttributes = new { @class = "form-control", type="password", id = "txtConfirmPassword", onChange="checkPasswordMatch()", required = "required" } })
                        @Html.ValidationMessageFor(model => model.CONFIRM_PASSWORD, "", new { @class = "text-danger" })
                        <div class="registrationFormAlert" id="divCheckPasswordMatch"></div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    }


@section scripts{
   @Scripts.Render("~/bundles/jqueryval")
<script>
    //stackoverflow.com/questions/21727317/how-to-check-confirm-password-field-in-form-without-reloading-page
    $('#txtNewPassword, #txtConfirmPassword').on('keyup', function () {
        if ($('#txtNewPassword').val() != null && $('#txtNewPassword').val() != '')
        {
            if ($('#txtNewPassword').val() == $('#txtConfirmPassword').val())
            {
                $('#divCheckPasswordMatch').html('Passwords match.').css('color', 'green');
            }
            else
                $('#divCheckPasswordMatch').html('Passwords do not match!').css('color', 'red');
        }
        else 
        {
            $('#divCheckPasswordMatch').html("");
        }
        
    });
    </script>
    }
